openapi: 3.0.0
info:
  title: HolidaysApp API Rest
  version: v1
servers:
  - url: http://localhost:8080
    description: Generated server url
tags:
  - name: organizations
    description: Get all organizations of Organizations APIs
paths:
  /organizationMOes:
    get:
      tags:
        - organization-mo-entity-controller
      description: get-organizationmo
      operationId: getCollectionResource-organizationmo-get
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            type: integer
            default: 0
            minimum: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            type: integer
            default: 20
            minimum: 1
        - name: sort
          in: query
          description: 'Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.'
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelOrganizationMO'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/PagedModelEntityModelOrganizationMO'
            text/uri-list:
              schema:
                type: string
    post:
      tags:
        - organization-mo-entity-controller
      description: create-organizationmo
      operationId: postCollectionResource-organizationmo-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationMORequestBody'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOrganizationMO'
  /organizationMOes/{id}:
    get:
      tags:
        - organization-mo-entity-controller
      description: get-organizationmo
      operationId: getItemResource-organizationmo-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOrganizationMO'
        '404':
          description: Not Found
    put:
      tags:
        - organization-mo-entity-controller
      description: update-organizationmo
      operationId: putItemResource-organizationmo-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationMORequestBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOrganizationMO'
        '201':
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOrganizationMO'
        '204':
          description: No Content
    delete:
      tags:
        - organization-mo-entity-controller
      description: delete-organizationmo
      operationId: deleteItemResource-organizationmo-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
    patch:
      tags:
        - organization-mo-entity-controller
      description: patch-organizationmo
      operationId: patchItemResource-organizationmo-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationMORequestBody'
        required: true
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelOrganizationMO'
        '204':
          description: No Content
  /profile:
    get:
      tags:
        - profile-controller
      operationId: listAllFormsOfMetadata
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RepresentationModelObject'
  /profile/organizationMOes:
    get:
      tags:
        - profile-controller
      operationId: descriptor
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
  /api-rest/organizations:
    get:
      tags:
        - get
      summary: Get all organizations
      description: Get all organizations of Organizations APIs
      operationId: getAllOrganizations
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
        '500':
          description: Internal Server Error
          content:
            application/hal+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Organization'
components:
  schemas:
    AbstractJsonSchemaPropertyObject:
      type: object
      properties:
        title:
          type: string
        readOnly:
          type: boolean
    Item:
      type: object
      properties:
        type:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractJsonSchemaPropertyObject'
        requiredProperties:
          type: array
          items:
            type: string
    JsonSchema:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractJsonSchemaPropertyObject'
        requiredProperties:
          type: array
          items:
            type: string
        definitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Item'
        type:
          type: string
        $schema:
          type: string
    RepresentationModelObject:
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/Links'
    EntityModelOrganizationMO:
      type: object
      properties:
        name:
          type: string
        _links:
          $ref: '#/components/schemas/Links'
    PageMetadata:
      type: object
      properties:
        size:
          type: integer
          format: int64
        totalElements:
          type: integer
          format: int64
        totalPages:
          type: integer
          format: int64
        number:
          type: integer
          format: int64
    PagedModelEntityModelOrganizationMO:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            organizationMOes:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelOrganizationMO'
        _links:
          $ref: '#/components/schemas/Links'
        page:
          $ref: '#/components/schemas/PageMetadata'
    OrganizationMORequestBody:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    Organization:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
    Links:
      type: object
      additionalProperties:
        $ref: '#/components/schemas/Link'
